// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaMarktAPI.Data;

#nullable disable

namespace PruebaMarktAPI.Migrations
{
    [DbContext(typeof(pruebamarktContext))]
    [Migration("20250307182344_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PruebaMarktAPI.Models.categoria", b =>
                {
                    b.Property<int>("idcategorias")
                        .HasColumnType("int(11)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("idcategorias")
                        .HasName("PRIMARY");

                    b.ToTable("categorias", t =>
                        {
                            t.ExcludeFromMigrations();
                        });

                    b.HasData(
                        new
                        {
                            idcategorias = 1,
                            nombre = "Smartphones"
                        },
                        new
                        {
                            idcategorias = 2,
                            nombre = "Portátiles"
                        },
                        new
                        {
                            idcategorias = 3,
                            nombre = "televisores"
                        });
                });

            modelBuilder.Entity("PruebaMarktAPI.Models.producto", b =>
                {
                    b.Property<int>("idproductos")
                        .HasColumnType("int(11)");

                    b.Property<string>("descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("idcategoria")
                        .HasColumnType("int(11)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<decimal?>("valoracion")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.HasKey("idproductos")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "idcategoria" }, "idcategorias_idx");

                    b.ToTable("productos", t =>
                        {
                            t.ExcludeFromMigrations();
                        });

                    b.HasData(
                        new
                        {
                            idproductos = 1,
                            descripcion = "Movilazo",
                            idcategoria = 1,
                            nombre = "iPhone13",
                            valoracion = 4m
                        },
                        new
                        {
                            idproductos = 2,
                            descripcion = "Movilazo",
                            idcategoria = 1,
                            nombre = "iPhone14",
                            valoracion = 4m
                        },
                        new
                        {
                            idproductos = 3,
                            descripcion = "Tele 32º.....",
                            idcategoria = 3,
                            nombre = "HiSense",
                            valoracion = 2m
                        },
                        new
                        {
                            idproductos = 4,
                            descripcion = "12GB RAM 256GB",
                            idcategoria = 2,
                            nombre = "Mac Book",
                            valoracion = 5m
                        });
                });

            modelBuilder.Entity("PruebaMarktAPI.Models.venta", b =>
                {
                    b.Property<int>("idventas")
                        .HasColumnType("int(11)");

                    b.Property<int>("cantidad")
                        .HasColumnType("int(11)");

                    b.Property<int>("idproducto")
                        .HasColumnType("int(11)");

                    b.Property<string>("nombreuser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("idventas")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "idproducto" }, "fk-idproducto_idx");

                    b.ToTable("ventas", t =>
                        {
                            t.ExcludeFromMigrations();
                        });

                    b.HasData(
                        new
                        {
                            idventas = 1,
                            cantidad = 8,
                            idproducto = 1,
                            nombreuser = "paco@gmail.com"
                        },
                        new
                        {
                            idventas = 2,
                            cantidad = 2,
                            idproducto = 4,
                            nombreuser = "rosa@gmail.com"
                        },
                        new
                        {
                            idventas = 3,
                            cantidad = 10,
                            idproducto = 3,
                            nombreuser = "empresasTV@gmail.com"
                        });
                });

            modelBuilder.Entity("PruebaMarktAPI.Models.producto", b =>
                {
                    b.HasOne("PruebaMarktAPI.Models.categoria", "idcategoriaNavigation")
                        .WithMany("productos")
                        .HasForeignKey("idcategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk-idcategorias");

                    b.Navigation("idcategoriaNavigation");
                });

            modelBuilder.Entity("PruebaMarktAPI.Models.venta", b =>
                {
                    b.HasOne("PruebaMarktAPI.Models.producto", "idproductoNavigation")
                        .WithMany("venta")
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk-idproducto");

                    b.Navigation("idproductoNavigation");
                });

            modelBuilder.Entity("PruebaMarktAPI.Models.categoria", b =>
                {
                    b.Navigation("productos");
                });

            modelBuilder.Entity("PruebaMarktAPI.Models.producto", b =>
                {
                    b.Navigation("venta");
                });
#pragma warning restore 612, 618
        }
    }
}
